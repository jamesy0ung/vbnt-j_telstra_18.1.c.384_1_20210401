<ipojo 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="org.apache.felix.ipojo http://felix.apache.org/ipojo/schemas/SNAPSHOT/core.xsd"
    xmlns="org.apache.felix.ipojo"
>

	<!-- Static Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticSimpleCheckServiceProvider" architecture="true">
		<requires field="fs" policy="static" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticVoidCheckServiceProvider" architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticObjectCheckServiceProvider" architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticRefCheckServiceProvider" architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticBothCheckServiceProvider" architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodCheckServiceProvider"
		name="StaticMObjectCheckServiceProvider" architecture="true">
		<requires policy="static">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodCheckServiceProvider"
		name="StaticMRefCheckServiceProvider" architecture="true">
		<requires
			specification="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			policy="static">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodCheckServiceProvider"
		name="StaticMBothCheckServiceProvider" architecture="true">
		<requires policy="static">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>

	<!-- Static Simple & Optional Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticSimpleOptionalCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true" policy="static" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticVoidOptionalCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true" policy="static">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticObjectOptionalCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true" policy="static">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticRefOptionalCheckServiceProvider" architecture="true">
		<requires field="fs" optional="true" policy="static">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.CheckServiceProvider"
		name="StaticBothOptionalCheckServiceProvider"
		architecture="true">
		<requires field="fs" optional="true" policy="static">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodCheckServiceProvider"
		name="StaticMObjectOptionalCheckServiceProvider"
		architecture="true">
		<requires optional="true" policy="static">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodCheckServiceProvider"
		name="StaticMRefOptionalCheckServiceProvider"
		architecture="true">
		<requires
			specification="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true" policy="static">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodCheckServiceProvider"
		name="StaticMBothOptionalCheckServiceProvider"
		architecture="true">
		<requires
			specification="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			optional="true" policy="static">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<!--  Static Multiple Dependencies -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MultipleCheckService"
		name="StaticSimpleMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" policy="static" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MultipleCheckService"
		name="StaticVoidMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="voidBind" />
			<callback type="unbind" method="voidUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MultipleCheckService"
		name="StaticObjectMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MultipleCheckService"
		name="StaticRefMultipleCheckServiceProvider" architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MultipleCheckService"
		name="StaticBothMultipleCheckServiceProvider"
		architecture="true">
		<requires field="fs" policy="static">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodMultipleCheckService"
		name="StaticMObjectMultipleCheckServiceProvider"
		architecture="true">
		<requires aggregate="true" policy="static">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodMultipleCheckService"
		name="StaticMRefMultipleCheckServiceProvider"
		architecture="true">
		<requires
			specification="org.apache.felix.ipojo.test.scenarios.service.dependency.service.FooService"
			aggregate="true" policy="static">
			<callback type="bind" method="refBind" />
			<callback type="unbind" method="refUnbind" />
		</requires>
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.MethodMultipleCheckService"
		name="StaticMBothMultipleCheckServiceProvider"
		architecture="true">
		<requires aggregate="true" policy="static">
			<callback type="bind" method="bothBind" />
			<callback type="unbind" method="bothUnbind" />
		</requires>
		<provides />
	</component>	
	
	<!-- Dynamic-Priority -->
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.dynamic.priority.RankedFooProviderType1"
		name="RankedFooProviderType" architecture="true">
		<provides>
			<property field="m_grade" name="service.ranking"/>
		</provides>
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.DynCheckServiceProvider"
		name="DPSimpleCheckServiceProvider" architecture="true">
		<requires field="fs" policy="dynamic-priority" />
		<provides />
	</component>
	<component
		classname="org.apache.felix.ipojo.test.scenarios.service.dependency.policies.DynCheckServiceProvider"
		name="DPObjectCheckServiceProvider" architecture="true">
		<requires field="fs" policy="dynamic-priority">
			<callback type="bind" method="objectBind" />
			<callback type="unbind" method="objectUnbind" />
		</requires>
		<provides />
	</component>
</ipojo>
