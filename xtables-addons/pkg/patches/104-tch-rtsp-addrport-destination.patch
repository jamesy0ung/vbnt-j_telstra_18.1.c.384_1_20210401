--- a/extensions/rtsp/nf_conntrack_rtsp.c
+++ b/extensions/rtsp/nf_conntrack_rtsp.c
@@ -21,6 +21,9 @@
  * 2017-06-02: Alin Nastac <alin.nastac at technicolor.com>
  *      - unbind this helper from conntracks using interleaved TCP transport mode (aka RTSP over TCP),
  *        so that RTSP stream could be accelerated on Broadcom platforms
+ * 2017-06-09: Alin Nastac <alin.nastac at technicolor.com>
+ *      - parse non-standard destination=address:port format
+ * 
  *
  * based on ip_conntrack_irc.c
  *
@@ -275,6 +278,29 @@ rtsp_parse_transport(char* ptran, uint t
 					rc = 1;
 				}
 			}
+			else if (nextfieldoff - off > 12 && strncmp(ptran+off, "destination=", 12) == 0) {
+				const char *psep;
+				u_int16_t   port;
+
+				off += 12;
+				if (in4_pton(ptran+off, nextfieldoff-off-1, (u8 *)&prtspexp->cltaddr.in, -1, NULL)) {
+					pr_debug("destination found : %pI4\n", &prtspexp->cltaddr.ip);
+
+					/*
+					 * STBs using Broadcom chipsets use non-standard destination parameters:
+					 *   destination=address:port
+					 */
+					psep = memchr(ptran+off, ':', nextfieldoff-off);
+					if (psep != NULL && nf_strtou16(psep + 1, &port)) {
+						if (prtspexp->loport != 0 && prtspexp->loport != port)
+							pr_debug("multiple ports found, port %hu ignored\n", port);
+						else {
+							pr_debug("lo port found : %hu\n", port);
+							prtspexp->loport = prtspexp->hiport = port;
+						}
+					}
+				}
+			}
 			else if (nextfieldoff - off > 8 && strncmp(ptran+off, "source=", 7) == 0) {
 				uint srcaddrlen;
 
--- a/extensions/rtsp/nf_conntrack_rtsp.h
+++ b/extensions/rtsp/nf_conntrack_rtsp.h
@@ -54,6 +54,7 @@ struct ip_ct_rtsp_expect
 #endif
     union nf_inet_addr srvaddr; /* src address in SETUP reply */
     int		tcpinterleaved; /* interleaved TCP transport mode (RFC 2326 chapter 10.12) */
+    union nf_inet_addr cltaddr; /* destination address */
 };
 
 extern unsigned int (*nf_nat_rtsp_hook)(struct sk_buff *skb,
--- a/extensions/rtsp/nf_nat_rtsp.c
+++ b/extensions/rtsp/nf_nat_rtsp.c
@@ -157,9 +157,9 @@ rtsp_mangle_tran(enum ip_conntrack_info
 	struct nf_conntrack_tuple *rtp_t;
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)
-	char szextaddr[INET6_ADDRSTRLEN];
+	char szextaddr[INET6_ADDRSTRLEN + 16];
 #else
-	char szextaddr[INET_ADDRSTRLEN];
+	char szextaddr[INET_ADDRSTRLEN + 16];
 #endif
 	uint extaddrlen;
 	int  is_stun;
@@ -292,8 +292,9 @@ rtsp_mangle_tran(enum ip_conntrack_info
 
 			pfieldend = memchr(ptran+off, ';', nextparamoff-off);
 			nextfieldoff = (pfieldend == NULL) ? nextparamoff : pfieldend-ptran+1;
+			SKIP_WSPACE(ptran, nextfieldoff, off);
 
-			if (dstact != DSTACT_NONE && strncmp(ptran+off, "destination=", 12) == 0) {
+			if (dstact != DSTACT_NONE && nextfieldoff - off > 12 && strncmp(ptran+off, "destination=", 12) == 0) {
 				if (strncmp(ptran+off+12, szextaddr, extaddrlen) == 0)
 					is_stun = 1;
 
@@ -304,12 +305,28 @@ rtsp_mangle_tran(enum ip_conntrack_info
 					uint dstreplen = 0;
 					diff = dstlen;
 					if (dstact == DSTACT_AUTO && !is_stun) {
-						pr_debug("RTSP: replace dst addr\n");
+						const char* psep = memchr(ptran+off, ':', dstlen);
+						u_int16_t port;
+
 						dstoff += 12;
 						dstlen -= 13;
 						pdstrep = szextaddr;
-						dstreplen = extaddrlen;
-						diff = nextfieldoff-off-13-extaddrlen;
+						if (psep != NULL && nf_strtou16(psep + 1, &port)) {
+							pr_debug("RTSP: replace dst addr&port\n");
+							if (port != prtspexp->loport) {
+								pr_debug("multiple ports found, port %hu ignored\n", port);
+								dstreplen = extaddrlen;
+							}
+							else {
+								sprintf(szextaddr + extaddrlen, ":%s", rbuf1);
+								dstreplen = extaddrlen + 1 + rbuf1len;
+							}
+						}
+						else {
+							pr_debug("RTSP: replace dst addr\n");
+							dstreplen = extaddrlen;
+						}
+						diff = nextfieldoff-off-13-dstreplen;
 					}
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(3,7,0)
@@ -347,7 +364,7 @@ rtsp_mangle_tran(enum ip_conntrack_info
 			pfieldend = memchr(ptran+off, ';', nextparamoff-off);
 			nextfieldoff = (pfieldend == NULL) ? nextparamoff : pfieldend-ptran+1;
 
-			if (strncmp(ptran+off, "client_port=", 12) == 0) {
+			if (nextfieldoff - off > 12 && strncmp(ptran+off, "client_port=", 12) == 0) {
 				u_int16_t port;
 				uint	  numlen;
 				uint      origoff;
